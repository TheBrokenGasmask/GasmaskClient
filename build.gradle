plugins {
	id 'fabric-loom' version '1.7-SNAPSHOT'
	id 'maven-publish'
}


version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	maven { url "https://maven.shedaniel.me/" }
	maven {
		name = "Terraformers"
		url = "https://maven.terraformersmc.com/"
	}
}

loom {
	splitEnvironmentSourceSets()

	mods {
		"wynntracker" {
			sourceSet sourceSets.main
			sourceSet sourceSets.client
		}
	}

}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modCompileOnly("com.terraformersmc:modmenu:${project.modmenu_version}")
	modRuntimeOnly("com.terraformersmc:modmenu:${project.modmenu_version}")
	modCompileOnly "me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}"
	modRuntimeOnly "me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}"
	modImplementation files("libs/wynntils-3.2.2-fabric+MC-1.21.4.jar")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}

// Custom task to generate BuildConstants.java
task generateBuildConstants {
    doLast {
        def buildConstantsDir = file("${buildDir}/generated/sources/buildConstants/java/main")
        buildConstantsDir.mkdirs()

        def buildConstantsFile = new File(buildConstantsDir, "BuildConstants.java")

        def versionPropsFile = file('version.properties')
        def versionProps = new Properties()

        if (versionPropsFile.exists()) {
            versionProps.load(new FileInputStream(versionPropsFile))
        }

        def apiUrl = findProperty('apiUrl') ?: versionProps['API_URL']
        def repoUrl = findProperty('repoUrl') ?: versionProps['REPO_URL']

        if (apiUrl == null) {
            throw new GradleException("API_URL is not defined in version.properties or as a command line argument.")
        }
        if (repoUrl == null) {
            throw new GradleException("REPO_URL is not defined in version.properties or as a command line argument.")
        }

        buildConstantsFile.withWriter { writer ->
            writer.println "package dev.wiji.tbgm;"
            writer.println ""
            writer.println "public final class BuildConstants {"
            writer.println "    public static final String API_URL = \"${apiUrl}\";"
            writer.println "    public static final String REPO_URL = \"${repoUrl}\";"
            writer.println "}"
        }
    }
}

// Add the generated source directory to the main source set
sourceSets.main.java.srcDirs += file("${buildDir}/generated/sources/buildConstants/java/main")

// Ensure generateBuildConstants runs before compilation
tasks.compileJava.dependsOn generateBuildConstants
